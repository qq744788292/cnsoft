<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns='http://www.springframework.org/schema/beans'
	xmlns:mvc='http://www.springframework.org/schema/mvc' 
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xmlns:p='http://www.springframework.org/schema/p'
	xmlns:context='http://www.springframework.org/schema/context' 
	xmlns:cache='http://www.springframework.org/schema/cache'
	xmlns:tx='http://www.springframework.org/schema/tx'
	xmlns:aop='http://www.springframework.org/schema/aop'
	xmlns:rabbit='http://www.springframework.org/schema/rabbit'	
	xsi:schemaLocation='
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		'>

	<!-- ********************************************************************** -->
	
	<!--注册数据库的连接信息 -->
	<bean id='mysqlDataSource' class='org.apache.commons.dbcp.BasicDataSource'>
		<property name='driverClassName' value='com.mysql.jdbc.Driver' />
		<property name='url' value='jdbc:mysql://192.168.1.57:3306/mmipdev?characterEncoding=UTF-8' />
		<property name='username' value='root' />
		<property name='password' value='zaq12wsx' />

		<!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="10"/>  
        <!--minIdle: 最小空闲连接-->    
        <property name="minIdle" value="10"/>  
        <!--maxIdle: 最大空闲连接-->    
        <property name="maxIdle" value="10"/>  
        <!--initialSize: 初始化连接-->    
        <property name="initialSize" value="10"/>  
        <!-- 连接被泄露时是否打印 -->  
        <property name="logAbandoned" value="true"/>  
        <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/> 
        
        <!-- 添加by高勤 -->
        <property name="validationQuery"  value="SELECT 1"/> <!-- 验证连接是否可用，使用的SQL语句 -->
        <property name="testWhileIdle"  value="true"/> <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除 -->
        <property name="testOnBorrow"  value="false"/> <!-- 借出连接时不要测试，否则很影响性能 -->
        <!-- 添加by高勤 -->
         
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10000"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->  
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="1800000"/>  
		
	</bean>
	<!-- 数据源配置 -->
	<!-- bean id='dataSource' class='com.mchange.v2.c3p0.ComboPooledDataSource' destroy-method='close'>
		Base Setting 
		<property name='driverClass' value='${work.driverClassName}' />
		<property name='jdbcUrl' value='${work.url}' />
		<property name='user' value='${work.username}' />
		<property name='password' value='${work.password}' />
		<property name='minPoolSize' value='${work.minPoolSize}'/>
		<property name='maxPoolSize' value='${work.maxPoolSize}'/>
		<property name='maxIdleTime' value='${work.maxIdleTime}'/>
		 Ext Setting 
		<property name='acquireIncrement' value='2'/>
		<property name='maxStatements' value='0'/>
		<property name='initialPoolSize' value='2'/>
		<property name='idleConnectionTestPeriod' value='1800'/>
		<property name='acquireRetryAttempts' value='30'/>
		<property name='breakAfterAcquireFailure' value='true'/>
		<property name='testConnectionOnCheckout' value='false'/>
	</bean-->

	<!-- ********************************************************************** -->
	<!-- 开启Spring的事务处理 -->
	<bean id='transactionManager' class='org.springframework.jdbc.datasource.DataSourceTransactionManager'>
		<property name='dataSource' ref='mysqlDataSource' />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>  

	
</beans>
