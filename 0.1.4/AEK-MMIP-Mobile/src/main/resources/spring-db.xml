<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns='http://www.springframework.org/schema/beans'
	xmlns:mvc='http://www.springframework.org/schema/mvc' 
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xmlns:p='http://www.springframework.org/schema/p'
	xmlns:context='http://www.springframework.org/schema/context' 
	xmlns:cache='http://www.springframework.org/schema/cache'
	xmlns:tx='http://www.springframework.org/schema/tx'
	xmlns:aop='http://www.springframework.org/schema/aop'
	xmlns:rabbit='http://www.springframework.org/schema/rabbit'	
	xsi:schemaLocation='
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		'>

	<!-- ********************************************************************** -->
	<!--注册数据库的连接信息 -->
	<import resource='classpath:spring-db-mysql.xml' />	
	<!-- <import resource='classpath:spring-db-cassandra.xml' />	 -->	
	
	<!-- 配置mybatis的sqlsessionFactory -->
	<!-- mybatis-spring -->
	<bean id='sqlSessionFactory' class='org.jfpc.framework.support.MySqlSessionFactorySupport'>
		<property name='dataSource' ref='mysqlDataSource' />
		<property name='configLocation' value='classpath:mybatis.xml' />
		<property name='mapperLocations'>
			<list>
				<value>classpath*:/com/aek56/atm/**/**/*.xml</value>
				<value>classpath*:/org/jfpc/beans/**/**/*.xml</value>
		 	</list>
		</property>
	</bean>
	
	<!-- 批量SqlSession -->
	<bean id='mySqlSession' class='org.mybatis.spring.SqlSessionTemplate'>
		<!-- 构造参数，自动关闭sqlSession -->
		<constructor-arg index='0' ref='sqlSessionFactory' />
		<constructor-arg index='1' value='SIMPLE' />
	</bean>
	
	<!--管理数据源连接配置 -->
	<bean id='myDateSourceManager' class='org.jfpc.framework.mybatis.MyDateSourceManager' >
		<property name="dataSources">
			<map>
				<entry key="MySql" value-ref="mysqlDataSource" />
				<!-- <entry key="Cassandra" value-ref="cassandraDataSource" /> -->
			</map>
		</property>
	</bean>
	
	<!-- 配置数据库初始化 -->
	<!-- DB管理工具初始化方法creat建库/init初始化数据/build重构/test简单测试  init-method='test' -->
	<!--  <bean id='DBConfigBean' class='org.jfpc.common.db.DBConfigBean'>
		<property name='errorGoon' value='true' />
		<property name='configLocation' value='classpath:mydb.xml' />
		<property name='sqlLocations'>
			<list>
				<value>classpath*:/org/jfpc/beans/**/**/*.sql</value>
				<value>classpath*:/com/aek56/atm/**/**/*.sql</value>
		 	</list>
		</property>
		<property name='dataLocations'>
			<list>
				<value>classpath*:/com/aek56/atm/**/**/*.dat</value>
				<value>classpath*:/org/jfpc/beans/**/**/*.dat</value>
		 	</list>		
		</property>
	</bean> 
	<bean class='org.jfpc.common.db.DBService' scope='singleton' init-method='build' /> 
	<bean class='org.jfpc.common.db.DBDao' />
	<bean class='org.jfpc.common.db.DBController' /> -->
	
	<!-- 用户登录 -->
	<bean class='org.jfpc.common.login.LoginService'>
		<property name='loginNumers' value='2' /><!-- 登录用户数 -->
	</bean>
	
	<!-- 物理分页 -->
	<bean id='IDialectInterceptor' class='org.jfpc.framework.mybatis.plugin.dialect.MySQLDialect' scope="prototype"/>
</beans>
