<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns='http://www.springframework.org/schema/beans'
	xmlns:mvc='http://www.springframework.org/schema/mvc' 
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xmlns:p='http://www.springframework.org/schema/p'
	xmlns:context='http://www.springframework.org/schema/context' 
	xmlns:cache='http://www.springframework.org/schema/cache'
	xmlns:tx='http://www.springframework.org/schema/tx'
	xmlns:aop='http://www.springframework.org/schema/aop'
	xmlns:rabbit='http://www.springframework.org/schema/rabbit'	
	xsi:schemaLocation='
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		'>
	
	<!--注册数据库的连接信息 -->
	<import resource='spring-db-mysql.xml' />	
	<!-- <import resource='classpath:spring-db-cassandra.xml' />	 -->

	<!-- ********************************************************************** -->	
	<!-- 开启Spring的事务处理 -->
	<bean id='transactionManager' class='org.springframework.jdbc.datasource.DataSourceTransactionManager'>
		<property name='dataSource' 		ref='myDateSourceManager' />
	</bean>
	
	<!-- 面向Class的事务管理 -->
	<tx:annotation-driven transaction-manager='transactionManager' proxy-target-class='true'/> 
	
	<!-- 批量SqlSession -->
	<bean id='mySqlSession' class='org.mybatis.spring.SqlSessionTemplate' scope='prototype'>
		<!-- 构造参数，自动关闭sqlSession -->
		<constructor-arg index='0' 			ref='sqlSessionFactory' />
		<!--
			不支持控制层事务，需要使用Biz或者Service来处理业务逻辑管理事务 
			SIMPLE (自动提交)执行器没有什么特别之处。
			REUSE 	执行器重用预处理语句。
			BATCH 	(事务支持)执行器重用语句和批量更新
		-->
		<constructor-arg index='1' value='BATCH' />
	</bean> 
	
	<!-- 配置mybatis的sqlsessionFactory -->
	<!-- mybatis-spring -->
	<bean id='sqlSessionFactory' class='org.zmsoft.jfp.framework.support.MySqlSessionFactorySupport'>
		<property name='dataSource' 		ref='myDateSourceManager' />
		<property name='configLocation' 	value='classpath:config/db/mybatis.xml' />
		<property name='aliaseType' 		value='DBO,PVO' />
		<property name='mapperLocations'>
			<list>
				<value>classpath*:/org/zmsoft/**/persistent/**/**/*.xml</value>
				<value>classpath*:/com/zmsoft/**/persistent/**/**/*.xml</value>
		 	</list>
		</property>
	</bean>
	
	<!--管理数据源连接配置 -->
	<bean id='myDateSourceManager' class='org.zmsoft.jfp.framework.mybatis.MyDataSourceManager' >
		<property name='defaultTargetDataSource' ref ='mysqlDataSource' />
	
		<!-- 多源数据库配置，参考<MyDataSourceHolder.java>、<ISDataSourceName.java> -->
		<property name='targetDataSources'>
			<map>
				<entry key='MySql' 			value-ref='mysqlDataSource' />
			</map>
		</property>
	</bean>
	
	<!-- 配置数据库初始化 -->
	<bean id='DBConfigBean' class='org.zmsoft.jfp.framework.db.DBConfigBean'>
		<property name='errorGoon' 			value='true' />
		<property name='sqlLocations'>
			<list>
				<value>classpath*:/org/zmsoft/**/persistent/**/**/*.sql</value>
				<value>classpath*:/com/zmsoft/**/persistent/**/**/*.sql</value>
		 	</list>
		</property>
		<property name='dataLocations'>
			<list>
				<value>classpath*:/org/zmsoft/**/persistent/**/**/*.dat</value>
				<value>classpath*:/com/zmsoft/**/persistent/**/**/*.dat</value>
		 	</list>		
		</property>
		<property name='indexLocations'>
			<list>
				<value>classpath*:/org/zmsoft/**/persistent/**/**/*.idx</value>
				<value>classpath*:/com/zmsoft/**/persistent/**/**/*.idx</value>
		 	</list>		
		</property>
	</bean> 
	
	<!-- 主数据源连接测试 -->
	<bean id='DBDao' class='org.zmsoft.jfp.framework.db.DBDao'>
		<property name='testTableName' 		value='s901030_menu' />
	</bean>
	
	<!-- 物理分页 -->
	<bean id='IDialectInterceptor' class='org.zmsoft.jfp.framework.mybatis.plugin.dialect.MySQLDialect' scope='prototype'/>
</beans>
